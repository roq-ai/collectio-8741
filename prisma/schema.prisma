generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model business {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?   @db.VarChar(255)
  address     String?   @db.VarChar(255)
  phone       String?   @db.VarChar(20)
  email       String?   @db.VarChar(100)
  name        String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user_id     String    @db.Uuid
  tenant_id   String    @db.VarChar(255)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  finance     finance[]
  payment     payment[]
}

model customer {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String    @db.VarChar(100)
  address    String    @db.VarChar(255)
  phone      String    @db.VarChar(20)
  email      String    @db.VarChar(100)
  user_id    String    @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  user       user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  payment    payment[]
}

model finance {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  budget      Int
  expense     Int
  income      Int
  profit      Int
  business_id String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  business    business @relation(fields: [business_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model payment {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  amount         Int
  payment_date   DateTime @db.Timestamp(6)
  payment_status String   @db.VarChar(50)
  business_id    String   @db.Uuid
  customer_id    String   @db.Uuid
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  business       business @relation(fields: [business_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customer       customer @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  business    business[]
  customer    customer[]
  vendor      vendor[]
}

model vendor {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar(100)
  address    String   @db.VarChar(255)
  phone      String   @db.VarChar(20)
  email      String   @db.VarChar(100)
  user_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
